
"@doc Workflow to get a Hostname from Infoblox
@doc Author: Xavier Bak (IBM)
@doc Input subnetName
@doc Input infobloxHostname
@doc The subnetName format is 10.28.20.0/24
@doc The infobloxHostname is a FQDN hostname s00v09952385.fr.net.intra
@doc There's no output from Infoblox a this stage, so a workaround is to use the ""host"" command
@doc Trouble can happen is dns is not fast enough

@param subnetName (10.28.20.0/24)
@param infobloxHostname (FQDN hostname)


workflow BNPP_Infoblox_GetIP(in subnetName, in infobloxHostname, in subnetArray, out infobloxIP, out VLAN_ID, out ZVLANID) LocaleInsensitive

	var ReturnCode
	var ReturnResult
	var ReturnErrorString
	var TPinfobloxserverID
	var TPinfobloxserver
	var TPinfobloxuser
	var TPwkflowID
	Get_Current_Deployment_Request_Id(TPwkflowID)
	var TSAMServerID
	java:com.thinkdynamics.kanaha.de.javaplugin.datacentermodel.FindDEDeviceId(TSAMServerID)
	var TPIp
	var TPCase
	var TPmessage
	var TPExecuteCommand
	var TPLogprefix
	array TPSubnetInfos
	array TPSubnetList
	var TPReturnCode
	var TPReturnErrorString
	var TPReturnResult
	var TPErrorMessage
	var TPTSAMProdHostname
	var workflowName = ""BNPP_Infoblox_GetIP""
	var workflowVersion = ""1.3""
	var TimeWait
	var subnetNamelock
	var TPInfobloxStatus

	Get_DCM_Property(0, <null>, ""Cloud.BNPP_Infoblox_Server"",TPinfobloxserver)
	Get_DCM_Property(0, <null>, ""Cloud.BNPP_Infoblox_User"",TPinfobloxuser)
	log info TPLogprefix + ""Infoblox server: "" + TPinfobloxserver
	log info TPLogprefix + ""Infoblox user: "" + TPinfobloxuser

	#Define TSAM Env variable
	#var TPTSAMEnv
	#Get_DCM_Property(0, <null>, ""Cloud.BNPP_TSAM_Environment"", TPTSAMEnv)

	#var TSAMProdServerID
	#Get_DCM_Property(0, <null>, ""Cloud.BNPP_TSAM_Production_Server"", TPTSAMProdHostname)
	#TSAMProdServerID = DCMQuery(/Server[@name=$TPTSAMProdHostname]/@id)

	TPLogprefix = workflowName + "" "" + workflowVersion + "": ""

	#Checking the input parameters

	if Jython[not infobloxHostname or infobloxHostname.isspace()] then
		log info TPLogprefix + ""Input parameter infobloxHostname is empty""
		throw Exception ""Input parameter infobloxHostname is empty""
	else
		log info TPLogprefix + ""Input parameter: infobloxHostname = "" + infobloxHostname
	endif

	#Checking the input parameters and determining the case:
	# mono VLAN if subnetName is used
	# multi VLAN if subnetArray is used
	if Jython[not subnetName or subnetName.isspace()] then
		log info TPLogprefix + ""Input parameter subnetName is empty""
		if Jython[not subnetArray or subnetArray.isspace()] then
				log error ""Input parameter subnetArray is also empty""
				throw Exception ""Input parameter subnetName and subnetArray are empty""
		else
			TPCase = ""multi""
			log info TPLogprefix + ""Current case is multiple VLAN""
		endif
	else
		log info TPLogprefix + ""Input parameter: subnetName = "" + subnetName
		TPCase = ""mono""
		log info TPLogprefix + ""Current case is mono VLAN""
	endif

	#Checking DCM internal parameters
	if Jython[not TSAMServerID or TSAMServerID.isspace()] then
		log info TPLogprefix + ""Internal parameter TSAMServerID is empty""
		throw Exception ""Internal parameter TSAMServerID empty""
	else
		log info TPLogprefix + ""Internal parameter: TSAMServerID = "" + TSAMServerID
	endif

	if Jython[not TPinfobloxserver or TPinfobloxserver.isspace()] then
		log info TPLogprefix + ""Internal parameter TPinfobloxserver is empty""
		throw Exception ""Internal parameter TPinfobloxserver empty""
	else
		log info TPLogprefix + ""Internal parameter: TPinfobloxserver = "" + TPinfobloxserver
	endif

	if Jython[not TPinfobloxuser or TPinfobloxuser.isspace()] then
		log info TPLogprefix + ""Internal parameter TPinfobloxuser is empty""
		throw Exception ""Internal parameter TPinfobloxuser empty""
	else
		log info TPLogprefix + ""Internal parameter: TPinfobloxuser = "" + TPinfobloxuser
	endif

	if Jython[not TPwkflowID or TPwkflowID.isspace()] then
		log info TPLogprefix + ""Internal parameter TPwkflowID is empty""
		throw Exception ""Internal parameter TPwkflowID empty""
	else
		log info TPLogprefix + ""Internal parameter: TPwkflowID = "" + TPwkflowID
	endif


	#Main Code
	log info TPLogprefix + ""TPCase = "" + TPCase


	# Case Mono Vlan : Object externe
	if Jython[TPCase == ""mono""] then

		#Just to replace / in subnetName by _ for the lock file
		array subnetNamelockArray = Jython[subnetName.split(""/"")]
		subnetNamelock = subnetNamelockArray[0] + ""_"" + subnetNamelockArray[1]

		# While loop to get lock file
		TimeWait = ""0""
		while Jython[int(TimeWait) < 25] do
			#Execute command example:
			TPmessage = ""Check for lock file /opt/BNPP/Infoblox/lock/"" + subnetNamelock + "".lock""
			log info TPLogprefix + TPmessage
			TPExecuteCommand = ""ls /opt/BNPP/Infoblox/lock/"" + subnetNamelock + "".lock ; echo $?""
			TPmessage = TPLogprefix + ""Executing "" + TPExecuteCommand + "" on TSAM""
			log debug TPmessage

			try
				Device.ExecuteCommand(TSAMServerID, TPExecuteCommand, ""/tmp"", ""default"", 120, ""error"", TPReturnCode, TPReturnErrorString, TPReturnResult)
				log debug ""Return code = "" + TPReturnCode
				log debug ""Standard output = "" + TPReturnResult
				log debug ""Error output = "" + TPReturnErrorString
			catchall e
				TPReturnCode = Java[com.ibm.tivoli.ldo.runtime.DeviceExecuteCommandExceptionHelper#getReturnCode(e)]
				TPReturnResult = Java[com.ibm.tivoli.ldo.runtime.DeviceExecuteCommandExceptionHelper#getReturnResult(e)]
				TPReturnErrorString = Java[com.ibm.tivoli.ldo.runtime.DeviceExecuteCommandExceptionHelper#getReturnErrorString(e)]
				log error ""Return code = "" + TPReturnCode
				log error ""Standard output = "" + TPReturnResult
				log error ""Error output = "" + TPReturnErrorString
				TPErrorMessage = ""Failed to execute "" + TPExecuteCommand + "" on TSAM :"" + TPReturnErrorString
				throw Exception TPErrorMessage
			endtry



			if Jython[TPReturnResult == ""2""] then
				TPmessage = ""Lock file /opt/BNPP/Infoblox/lock/"" + subnetNamelock + "".lock not found, so going futher""
				log info TPLogprefix + TPmessage
				break
			endif

			if Jython[TPReturnResult != ""0""] then
				TPmessage = ""Lock file /opt/BNPP/Infoblox/lock/"" + subnetNamelock + "".lock found, waiting....""
				log info TPLogprefix + TPmessage
			endif

			Sleep_local(60000)

			TimeWait = Jython[int(TimeWait) + 1]
		done

		if Jython[int(TimeWait) == 25] then
			TPmessage = TPLogprefix + ""Couldn't have a slot in time, something is keeping infoblox busy for this subnet""
			throw Exception ""Couldn't have a slot in time, something is keeping infoblox busy for this subnet""
		endif

		# Building the lock file
		TPExecuteCommand = ""echo "" + TPwkflowID + "":"" + infobloxHostname + "" > /opt/BNPP/Infoblox/lock/"" + subnetNamelock + "".lock""
		log info TPLogprefix + ""Executing: "" + TPExecuteCommand
		try
			Device.ExecuteCommand(TSAMServerID, TPExecuteCommand, ""/tmp"", ""default"", 120, ""error"", ReturnCode, ReturnErrorString, ReturnResult)
			log debug ""Return code = "" + ReturnCode
			log debug ""Standard output = "" + ReturnResult
			log debug ""Error output = "" + ReturnErrorString
		catchall e
			ReturnCode = Java[com.ibm.tivoli.ldo.runtime.DeviceExecuteCommandExceptionHelper#getReturnCode(e)]
			ReturnResult = Java[com.ibm.tivoli.ldo.runtime.DeviceExecuteCommandExceptionHelper#getReturnResult(e)]
			ReturnErrorString = Java[com.ibm.tivoli.ldo.runtime.DeviceExecuteCommandExceptionHelper#getReturnErrorString(e)]
			log error ""Return code = "" + ReturnCode
			log error ""Standard output = "" + ReturnResult
			log error ""Error output = "" + ReturnErrorString
			throw Exception ""Failed to create lock file.""
		endtry
		# Calling infoblox
		TPinfobloxserverID = DCMQuery(/Server[@name=$TPinfobloxserver]/@id)
		TPExecuteCommand = ""/home/cloudadm/cloud_add_del_records.pl ADD "" + subnetName + "" "" + infobloxHostname
		log info TPLogprefix + ""Executing: "" + TPExecuteCommand
		try
			Device.ExecuteCommand(TPinfobloxserverID, TPExecuteCommand, ""/tmp"", ""default"", 120, ""error"", ReturnCode, ReturnErrorString, ReturnResult)
			log info TPLogprefix + ""cloud_add_del_records.pl: Reservation OK""
			log debug ""Return code = "" + ReturnCode
			log debug ""Standard output = "" + ReturnResult
			log debug ""Error output = "" + ReturnErrorString
		catchall e
			ReturnCode = Java[com.ibm.tivoli.ldo.runtime.DeviceExecuteCommandExceptionHelper#getReturnCode(e)]
			ReturnResult = Java[com.ibm.tivoli.ldo.runtime.DeviceExecuteCommandExceptionHelper#getReturnResult(e)]
			ReturnErrorString = Java[com.ibm.tivoli.ldo.runtime.DeviceExecuteCommandExceptionHelper#getReturnErrorString(e)]
			log error ""Return code = "" + ReturnCode
			log error ""Standard output = "" + ReturnResult
			log error ""Error output = "" + ReturnErrorString

			TPInfobloxStatus = ""KO""
			if Jython[int(ReturnCode) == 1] then
				TPErrorMessage = ""cloud_add_del_records.pl: session cannot be established - retry""
			endif
			if Jython[int(ReturnCode) == 2] then
				TPErrorMessage = ""cloud_add_del_records.pl: IP available but cant be pinged""
			endif
			if Jython[int(ReturnCode) == 3] then
				TPErrorMessage = ""cloud_add_del_records.pl: incorrect subnet""
			endif
			if Jython[int(ReturnCode) == 4] then
				TPErrorMessage = ""cloud_add_del_records.pl: problem while adding entry - retry""
			endif
			if Jython[int(ReturnCode) == 5] then
				TPErrorMessage = ""cloud_add_del_records.pl: subnet full for "" + TPSubnetInfos[2]
			endif
			if Jython[int(ReturnCode) == 6] then
				TPErrorMessage = ""cloud_add_del_records.pl: unknown return code""
			endif
			if Jython[int(ReturnCode) == 7] then
				TPErrorMessage = ""cloud_add_del_records.pl: unknown return code""
			endif
			if Jython[int(ReturnCode) == 8] then
				TPErrorMessage = ""cloud_add_del_records.pl: unknown return code""
			endif
			if Jython[int(ReturnCode) == 9] then
				TPErrorMessage = ""cloud_add_del_records.pl: unknown return code""
			endif
			if Jython[int(ReturnCode) == 10] then
				TPErrorMessage = ""cloud_add_del_records.pl: unknown return code""
			endif
			if Jython[int(ReturnCode) == 11] then
				TPErrorMessage = ""cloud_add_del_records.pl: unknown return code""
			endif
			if Jython[int(ReturnCode) == 12] then
				TPErrorMessage = ""cloud_add_del_records.pl: unknown return code""
			endif
			if Jython[int(ReturnCode) == 13] then
				TPErrorMessage = ""cloud_add_del_records.pl: unknown return code""
			endif
			if Jython[int(ReturnCode) == 14] then
				TPErrorMessage = ""cloud_add_del_records.pl: Error : Host already exists and user does not have read rights on Subnet "" + TPSubnetInfos[2]
			endif
			if Jython[int(ReturnCode) == 15] then
				TPErrorMessage = ""cloud_add_del_records.pl: Error : Host already exists in DNS and is pinging""
			endif
			if Jython[int(ReturnCode) == 16] then
				TPErrorMessage = ""cloud_add_del_records.pl: Error : Host already exists in DNS and does not exist in Infoblox""
			endif
			if Jython[int(ReturnCode) == 17] then
				TPErrorMessage = ""cloud_add_del_records.pl: Error : Host already exists and error when trying to delete the host""
			endif
			if Jython[int(ReturnCode) == 18] then
				TPErrorMessage = ""cloud_add_del_records.pl: unknown return code""
			endif
			if Jython[int(ReturnCode) == 19] then
				TPErrorMessage = ""cloud_add_del_records.pl: : Hostname already exists in DNS""
			endif
			if Jython[int(ReturnCode) == 20] then
				TPErrorMessage = ""cloud_add_del_records.pl: Error while rollback""
			endif
			if Jython[int(ReturnCode) > 20] then
				TPErrorMessage = ""cloud_add_del_records.pl: unknown return code""
			endif
		endtry

		#Removing lock file
		TPExecuteCommand = ""rm /opt/BNPP/Infoblox/lock/"" + subnetNamelock + "".lock""
		log info TPLogprefix + ""Executing: "" + TPExecuteCommand
		try
			Device.ExecuteCommand(TSAMServerID, TPExecuteCommand, ""/tmp"", ""default"", 120, ""error"", ReturnCode, ReturnErrorString, ReturnResult)
			log debug ""Return code = "" + ReturnCode
			log debug ""Standard output = "" + ReturnResult
			log debug ""Error output = "" + ReturnErrorString
		catchall e
			ReturnCode = Java[com.ibm.tivoli.ldo.runtime.DeviceExecuteCommandExceptionHelper#getReturnCode(e)]
			ReturnResult = Java[com.ibm.tivoli.ldo.runtime.DeviceExecuteCommandExceptionHelper#getReturnResult(e)]
			ReturnErrorString = Java[com.ibm.tivoli.ldo.runtime.DeviceExecuteCommandExceptionHelper#getReturnErrorString(e)]
			log error ""Return code = "" + ReturnCode
			log error ""Standard output = "" + ReturnResult
			log error ""Error output = "" + ReturnErrorString
			log warning ""Failed to remove lock file.""
		endtry

		if Jython[TPInfobloxStatus == ""KO""] then
			throw Exception TPErrorMessage
		endif

		# We use nslookup to check that this hostname exist on Infoblox and get the IP
		var ExecuteCommandHost = ""test"" + TPwkflowID + ""=`host "" + infobloxHostname + ""`; echo $test"" + TPwkflowID
		log debug ""Using host to find the IP of the hostname""
		log info TPLogprefix + ""Executing: "" + ExecuteCommandHost

		try
			Device.ExecuteCommand(TSAMServerID, ExecuteCommandHost, ""/tmp"", ""default"", 120, ""error"", ReturnCode, ReturnErrorString, ReturnResult)
			log debug ""Return code = "" + ReturnCode
			log debug ""Standard output = "" + ReturnResult
			log debug ""Error output = "" + ReturnErrorString
		catchall e
			ReturnCode = Java[com.ibm.tivoli.ldo.runtime.DeviceExecuteCommandExceptionHelper#getReturnCode(e)]
			ReturnResult = Java[com.ibm.tivoli.ldo.runtime.DeviceExecuteCommandExceptionHelper#getReturnResult(e)]
			ReturnErrorString = Java[com.ibm.tivoli.ldo.runtime.DeviceExecuteCommandExceptionHelper#getReturnErrorString(e)]
			log error ""Return code = "" + ReturnCode
			log error ""Standard output = "" + ReturnResult
			log error ""Error output = "" + ReturnErrorString
		endtry
		if Jython[ReturnCode != ""0""] then
			log error ""ServerName is not resolved""
			throw exception ""ServerName is not resolved""
		else
			array TPFQDNParse = Jython[ReturnResult.split("" "")]
			TPIp = TPFQDNParse[3]
			log info TPLogprefix + ""Internal parameter: TPIp = "" + TPIp
		endif

		#Put the TPip
		infobloxIP = TPIp
	endif

	# Case multi Vlan : VM
	if Jython[TPCase == ""multi""] then

		#Fisrt we split the input array by using split ;
		TPSubnetList = Jython[subnetArray.split("";"")]
		var TPSubnetListsize = arraysize(TPSubnetList)
		log info TPLogprefix + ""Number of Scopes to try: "" + TPSubnetListsize

		#For each vlan found in the previous array we try to get an IP
		foreach TPSubnet in TPSubnetList do

			#We split to get ZLANID, VLANID and subnetName
			TPSubnetInfos = Jython[TPSubnet.split("","")]
			var TPSubnetInfossize = arraysize(TPSubnetInfos)
			if Jython[TPSubnetInfossize != ""3""] then
				log error ""Number is not correct in TPSubnetInfos: "" + TPSubnetInfossize
				throw Exception ""Number is incorrect in array TPSubnetInfos""
			endif

			ZVLANID = TPSubnetInfos[0]
			log info TPLogprefix + ""ZVLANID = "" + ZVLANID
			VLAN_ID = TPSubnetInfos[1]
			log info TPLogprefix + ""VLAN_ID = "" + VLAN_ID
			subnetName = TPSubnetInfos[2]
			log info TPLogprefix + ""subnetName = "" + subnetName

			#Just to replace / in subnetName by _ for the lock file
			array subnetNamelockArray = Jython[subnetName.split(""/"")]
			subnetNamelock = subnetNamelockArray[0] + ""_"" + subnetNamelockArray[1]

			TimeWait = ""0""
			while Jython[int(TimeWait) < 25] do
				TPmessage = ""Check for lock file /opt/BNPP/Infoblox/lock/"" + subnetNamelock + "".lock""
				log info TPLogprefix + TPmessage
				TPExecuteCommand = ""ls /opt/BNPP/Infoblox/lock/"" + subnetNamelock + "".lock ; echo $?""
				TPmessage = ""Executing "" + TPExecuteCommand + "" on TSAM""
				log debug TPLogprefix + TPmessage

				try
					Device.ExecuteCommand(TSAMServerID, TPExecuteCommand, ""/tmp"", ""default"", 120, ""error"", TPReturnCode, TPReturnErrorString, TPReturnResult)
					log debug ""Return code = "" + TPReturnCode
					log debug ""Standard output = "" + TPReturnResult
					log debug ""Error output = "" + TPReturnErrorString
				catchall e
					TPReturnCode = Java[com.ibm.tivoli.ldo.runtime.DeviceExecuteCommandExceptionHelper#getReturnCode(e)]
					TPReturnResult = Java[com.ibm.tivoli.ldo.runtime.DeviceExecuteCommandExceptionHelper#getReturnResult(e)]
					TPReturnErrorString = Java[com.ibm.tivoli.ldo.runtime.DeviceExecuteCommandExceptionHelper#getReturnErrorString(e)]
					log error ""Return code = "" + TPReturnCode
					log error ""Standard output = "" + TPReturnResult
					log error ""Error output = "" + TPReturnErrorString
					TPErrorMessage = ""Failed to execute "" + TPExecuteCommand + "" on TSAM :"" + TPReturnErrorString
					throw Exception TPErrorMessage
				endtry

				if Jython[TPReturnResult == ""2""] then
					TPmessage = ""Lock file /opt/BNPP/Infoblox/lock/"" + subnetNamelock + "".lock not found, so going futher""
					log info TPLogprefix + TPmessage
					break
				endif

				if Jython[TPReturnResult != ""0""] then
					TPmessage = ""Lock file /opt/BNPP/Infoblox/lock/"" + subnetNamelock + "".lock found, waiting....""
					log info TPLogprefix + TPmessage
				endif

				Sleep_local(60000)
				TimeWait = Jython[int(TimeWait) + 1]
			done

			if Jython[int(TimeWait) == 25] then
				TPErrorMessage = ""Couldn't have a slot in time, something is keeping infoblox busy for this subnet""
				throw Exception TPErrorMessage
			endif

			TPExecuteCommand = ""echo "" + TPwkflowID + "":"" + infobloxHostname + "" > /opt/BNPP/Infoblox/lock/"" + subnetNamelock + "".lock""
			log debug ""Executing: "" + TPExecuteCommand
			try
				Device.ExecuteCommand(TSAMServerID, TPExecuteCommand, ""/tmp"", ""default"", 120, ""error"", ReturnCode, ReturnErrorString, ReturnResult)
				log debug ""Return code = "" + ReturnCode
				log debug ""Standard output = "" + ReturnResult
				log debug ""Error output = "" + ReturnErrorString
			catchall e
				ReturnCode = Java[com.ibm.tivoli.ldo.runtime.DeviceExecuteCommandExceptionHelper#getReturnCode(e)]
				ReturnResult = Java[com.ibm.tivoli.ldo.runtime.DeviceExecuteCommandExceptionHelper#getReturnResult(e)]
				ReturnErrorString = Java[com.ibm.tivoli.ldo.runtime.DeviceExecuteCommandExceptionHelper#getReturnErrorString(e)]
				log error ""Return code = "" + ReturnCode
				log error ""Standard output = "" + ReturnResult
				log error ""Error output = "" + ReturnErrorString
				throw Exception ""Failed to create lock file.""
			endtry

			TPinfobloxserverID = DCMQuery(/Server[@name=$TPinfobloxserver]/@id)
			TPExecuteCommand = ""/home/cloudadm/cloud_add_del_records.pl ADD "" + subnetName + "" "" + infobloxHostname
			log debug ""Executing: "" + TPExecuteCommand

			try
				Device.ExecuteCommand(TPinfobloxserverID, TPExecuteCommand, ""/tmp"", ""default"", 120, ""error"", ReturnCode, ReturnErrorString, ReturnResult)
				TPInfobloxStatus = ""OK""
				log info TPLogprefix + ""cloud_add_del_records.pl: Reservation OK""
				log debug ""Return code = "" + ReturnCode
				log debug ""Standard output = "" + ReturnResult
				log debug ""Error output = "" + ReturnErrorString
			catchall e
				ReturnCode = Java[com.ibm.tivoli.ldo.runtime.DeviceExecuteCommandExceptionHelper#getReturnCode(e)]
				ReturnResult = Java[com.ibm.tivoli.ldo.runtime.DeviceExecuteCommandExceptionHelper#getReturnResult(e)]
				ReturnErrorString = Java[com.ibm.tivoli.ldo.runtime.DeviceExecuteCommandExceptionHelper#getReturnErrorString(e)]
				log error ""Return code = "" + ReturnCode
				log error ""Standard output = "" + ReturnResult
				log error ""Error output = "" + ReturnErrorString

				TPInfobloxStatus = ""KO""
				if Jython[int(ReturnCode) == 1] then
					TPErrorMessage = ""cloud_add_del_records.pl: session cannot be established - retry""
				endif
				if Jython[int(ReturnCode) == 2] then
					TPErrorMessage = ""cloud_add_del_records.pl: IP available but cant be pinged""
				endif
				if Jython[int(ReturnCode) == 3] then
					TPErrorMessage = ""cloud_add_del_records.pl: incorrect subnet""
				endif
				if Jython[int(ReturnCode) == 4] then
					TPErrorMessage = ""cloud_add_del_records.pl: problem while adding entry - retry""
				endif
				if Jython[int(ReturnCode) == 5] then
					TPErrorMessage = ""cloud_add_del_records.pl: subnet full for "" + TPSubnetInfos[2]
					TPInfobloxStatus = ""FULL""
				endif
				if Jython[int(ReturnCode) == 6] then
					TPErrorMessage = ""cloud_add_del_records.pl: unknown return code""
				endif
				if Jython[int(ReturnCode) == 7] then
					TPErrorMessage = ""cloud_add_del_records.pl: unknown return code""
				endif
				if Jython[int(ReturnCode) == 8] then
					TPErrorMessage = ""cloud_add_del_records.pl: unknown return code""
				endif
				if Jython[int(ReturnCode) == 9] then
					TPErrorMessage = ""cloud_add_del_records.pl: unknown return code""
				endif
				if Jython[int(ReturnCode) == 10] then
					TPErrorMessage = ""cloud_add_del_records.pl: unknown return code""
				endif
				if Jython[int(ReturnCode) == 11] then
					TPErrorMessage = ""cloud_add_del_records.pl: unknown return code""
				endif
				if Jython[int(ReturnCode) == 12] then
					TPErrorMessage = ""cloud_add_del_records.pl: unknown return code""
				endif
				if Jython[int(ReturnCode) == 13] then
					TPErrorMessage = ""cloud_add_del_records.pl: unknown return code""
				endif
				if Jython[int(ReturnCode) == 14] then
					TPErrorMessage = ""cloud_add_del_records.pl: Host already exists and user does not have read rights on Subnet "" + TPSubnetInfos[2]
				endif
				if Jython[int(ReturnCode) == 15] then
					TPErrorMessage = ""cloud_add_del_records.pl: Host already exists in DNS and is pinging""
				endif
				if Jython[int(ReturnCode) == 16] then
					TPErrorMessage = ""cloud_add_del_records.pl: Host already exists in DNS and does not exist in Infoblox""
				endif
				if Jython[int(ReturnCode) == 17] then
					TPErrorMessage = ""cloud_add_del_records.pl: Host already exists and error when trying to delete the host""
				endif
				if Jython[int(ReturnCode) == 18] then
					TPErrorMessage = ""cloud_add_del_records.pl: unknown return code""
				endif
				if Jython[int(ReturnCode) == 19] then
					TPErrorMessage = ""cloud_add_del_records.pl: Hostname already exists in DNS""
				endif
				if Jython[int(ReturnCode) == 20] then
					TPErrorMessage = ""cloud_add_del_records.pl: Error while rollback""
				endif
				if Jython[int(ReturnCode) > 20] then
					TPErrorMessage = ""cloud_add_del_records.pl: unknown return code""
				endif
			endtry

			# Removing lock file
			TPExecuteCommand = ""rm /opt/BNPP/Infoblox/lock/"" + subnetNamelock + "".lock""
			log debug ""Executing: "" + TPExecuteCommand
			try
				Device.ExecuteCommand(TSAMServerID, TPExecuteCommand, ""/tmp"", ""default"", 120, ""error"", ReturnCode, ReturnErrorString, ReturnResult)
				log debug ""Return code = "" + ReturnCode
				log debug ""Standard output = "" + ReturnResult
				log debug ""Error output = "" + ReturnErrorString
			catchall e
				ReturnCode = Java[com.ibm.tivoli.ldo.runtime.DeviceExecuteCommandExceptionHelper#getReturnCode(e)]
				ReturnResult = Java[com.ibm.tivoli.ldo.runtime.DeviceExecuteCommandExceptionHelper#getReturnResult(e)]
				ReturnErrorString = Java[com.ibm.tivoli.ldo.runtime.DeviceExecuteCommandExceptionHelper#getReturnErrorString(e)]
				log error ""Return code = "" + ReturnCode
				log error ""Standard output = "" + ReturnResult
				log error ""Error output = "" + ReturnErrorString
				log warning ""Failed to remove lock file.""
			endtry

			if Jython[TPInfobloxStatus == ""KO""] then
				throw Exception TPErrorMessage
			endif
			if Jython[TPInfobloxStatus == ""FULL""] then
				log warning subnetName + "" is full""
			endif
			if Jython[TPInfobloxStatus == ""OK""] then
				# We use nslookup to retrieve the FQDN of the server and to check that this hostname exist on Infoblox
				var ExecuteCommandHost = ""echo $(host "" + infobloxHostname + "" | tail -1)""
				log info TPLogprefix + ""Using host to find the IP of the infobloxHostname""
				log debug ""Executing: "" + ExecuteCommandHost
				var ReturnHostCode
				var ReturnHostErrorString
				var ReturnHostResult

				try
					Device.ExecuteCommand(TSAMServerID, ExecuteCommandHost, ""/tmp"", ""default"", 120, ""error"", ReturnHostCode, ReturnHostErrorString, ReturnHostResult)
					log debug ""Return code = "" + ReturnHostCode
					log debug ""Standard output = "" + ReturnHostResult
					log debug ""Error output = "" + ReturnHostErrorString
				catchall e
					ReturnHostCode = Java[com.ibm.tivoli.ldo.runtime.DeviceExecuteCommandExceptionHelper#getReturnCode(e)]
					ReturnHostResult = Java[com.ibm.tivoli.ldo.runtime.DeviceExecuteCommandExceptionHelper#getReturnResult(e)]
					ReturnHostErrorString = Java[com.ibm.tivoli.ldo.runtime.DeviceExecuteCommandExceptionHelper#getReturnErrorString(e)]
					log error ""Return code = "" + ReturnHostCode
					log error ""Standard output = "" + ReturnHostResult
					log error ""Error output = "" + ReturnHostErrorString
					throw Exception ""Failed to execute Host command.""
				endtry

				if Jython[ReturnHostCode != ""0""] then
					log error ""ServerName is not resolved""
					throw exception ""ServerName is not resolved""
				else
					array TPFQDNParse = Jython[ReturnHostResult.split("" "")]
					TPIp = TPFQDNParse[3]
					log info TPLogprefix + ""Internal parameter: TPIp = "" + TPIp
					infobloxIP = TPIp
					break
				endif
			endif
		done

		if Jython[TPInfobloxStatus == ""FULL""] then
			log error ""All Infoblox subnets are full""
			throw Exception ""All Infoblox subnets are full""
		endif
	endif

	# Create fr.net.intra alias if infobloxHostname is not in that subdomain
	array TPHostnameParts = Jython[infobloxHostname.split(""."")]
	var TPSHostnamePartsSize = arraysize(TPHostnameParts)
	if Jython[int(TPSHostnamePartsSize) < 2] then
		TPErrorMessage = ""infobloxHostname is not an FQDN: "" + infobloxHostname
		throw Exception TPErrorMessage
	endif

	var shortHostname = TPHostnameParts[0]
	var needCName = ""yes""
	if Jython[int(TPSHostnamePartsSize) == 4] then
		var domaineName = TPHostnameParts[1] + ""."" + TPHostnameParts[2] + ""."" + TPHostnameParts[3]
		if Jython[domaineName == ""fr.net.intra""] then
			needCName = ""no""
		endif
	endif

	if Jython[needCName == ""yes""] then
		TPExecuteCommand = ""/home/cloudadm/cnames_crud.pl ADD_CN "" + shortHostname + "".fr.net.intra "" + infobloxHostname
		log info TPLogprefix + ""Creating alias in fr.net.intra""
		log debug ""Executing: "" + TPExecuteCommand
		try
			Device.ExecuteCommand(TPinfobloxserverID, TPExecuteCommand, ""/tmp"", ""default"", 120, ""error"", ReturnCode, ReturnErrorString, ReturnResult)
			log info TPLogprefix + ""cnames_crud.pl: CNAME created OK""
			log debug ""Return code = "" + ReturnCode
			log debug ""Standard output = "" + ReturnResult
			log debug ""Error output = "" + ReturnErrorString
		catchall e
			ReturnCode = Java[com.ibm.tivoli.ldo.runtime.DeviceExecuteCommandExceptionHelper#getReturnCode(e)]
			ReturnResult = Java[com.ibm.tivoli.ldo.runtime.DeviceExecuteCommandExceptionHelper#getReturnResult(e)]
			ReturnErrorString = Java[com.ibm.tivoli.ldo.runtime.DeviceExecuteCommandExceptionHelper#getReturnErrorString(e)]
			log error ""Return code = "" + ReturnCode
			log error ""Standard output = "" + ReturnResult
			log error ""Error output = "" + ReturnErrorString

			TPInfobloxStatus = ""KO""
			if Jython[int(ReturnCode) == -2] then
				TPErrorMessage = ""cnames_crud.pl: invalid credentials""
			endif
			if Jython[int(ReturnCode) == -1] then
				TPErrorMessage = ""cnames_crud.pl: bad parameters""
			endif
			if Jython[int(ReturnCode) == 1] then
				TPErrorMessage = ""cnames_crud.pl: error creating REST client - retry""
			endif
			if Jython[int(ReturnCode) == 2] then
				TPErrorMessage = ""cnames_crud.pl: error during get CNAME""
			endif
			if Jython[int(ReturnCode) == 3] then
				TPErrorMessage = ""cnames_crud.pl: error during create CNAME""
			endif
			if Jython[int(ReturnCode) == 4] then
				TPErrorMessage = ""cnames_crud.pl: error during delete CNAME""
			endif
			if Jython[int(ReturnCode) == 5] then
				TPErrorMessage = ""cnames_crud.pl: error during modify CNAME""
			endif
			if Jython[int(ReturnCode) == 6] then
				TPErrorMessage = ""cnames_crud.pl: error CNAME already exists with correct information""
			endif
			if Jython[int(ReturnCode) == 7] then
				TPErrorMessage = ""cnames_crud.pl: error CNAME already exists with ANOTHER canonical""
			endif
			if Jython[int(ReturnCode) == 8] then
				TPErrorMessage = ""cnames_crud.pl: error CNAME does not exist in Infoblox""
			endif
			if Jython[int(ReturnCode) > 8] then
				TPErrorMessage = ""cnames_crud.pl: unknown return code""
			endif
		endtry
	endif
	if Jython[TPInfobloxStatus == ""KO""] then
	    log error TPLogprefix + TPErrorMessage
		throw Exception TPErrorMessage
	endif

	#END MAIN PART

	log info TPLogprefix + ""End"""
